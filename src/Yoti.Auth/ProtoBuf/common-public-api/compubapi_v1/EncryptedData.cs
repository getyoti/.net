// <auto-generated>
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EncryptedData.proto
// </auto-generated>

#region Designer generated code

using pb = global::Google.Protobuf;
using pbr = global::Google.Protobuf.Reflection;

namespace CompubapiV1
{
    /// <summary>Holder for reflection information generated from EncryptedData.proto</summary>
    public static partial class EncryptedDataReflection
    {
        #region Descriptor

        /// <summary>File descriptor for EncryptedData.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }

        private static pbr::FileDescriptor descriptor;

        static EncryptedDataReflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "ChNFbmNyeXB0ZWREYXRhLnByb3RvEgxjb21wdWJhcGlfdjEiMAoNRW5jcnlw",
                  "dGVkRGF0YRIKCgJpdhgBIAEoDBITCgtjaXBoZXJfdGV4dBgCIAEoDEIrChVj",
                  "b20ueW90aS5jb21wdWJhcGlfdjFCEkVuY3J5cHRlZERhdGFQcm90b2IGcHJv",
                  "dG8z"));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { },
                new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CompubapiV1.EncryptedData), global::CompubapiV1.EncryptedData.Parser, new[]{ "Iv", "CipherText" }, null, null, null)
                }));
        }

        #endregion Descriptor
    }

    #region Messages

    public sealed partial class EncryptedData : pb::IMessage<EncryptedData>
    {
        private static readonly pb::MessageParser<EncryptedData> _parser = new pb::MessageParser<EncryptedData>(() => new EncryptedData());

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EncryptedData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::CompubapiV1.EncryptedDataReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EncryptedData()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EncryptedData(EncryptedData other) : this()
        {
            iv_ = other.iv_;
            cipherText_ = other.cipherText_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EncryptedData Clone()
        {
            return new EncryptedData(this);
        }

        /// <summary>Field number for the "iv" field.</summary>
        public const int IvFieldNumber = 1;

        private pb::ByteString iv_ = pb::ByteString.Empty;

        /// <summary>
        ///  the iv will be used in conjunction with the secret key
        ///  received via other channel in order to decrypt the cipher_text
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Iv
        {
            get { return iv_; }
            set
            {
                iv_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "cipher_text" field.</summary>
        public const int CipherTextFieldNumber = 2;

        private pb::ByteString cipherText_ = pb::ByteString.Empty;

        /// <summary>
        ///  block of bytes to be decrypted
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString CipherText
        {
            get { return cipherText_; }
            set
            {
                cipherText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EncryptedData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EncryptedData other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Iv != other.Iv) return false;
            if (CipherText != other.CipherText) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Iv.Length != 0) hash ^= Iv.GetHashCode();
            if (CipherText.Length != 0) hash ^= CipherText.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Iv.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteBytes(Iv);
            }
            if (CipherText.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteBytes(CipherText);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Iv.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Iv);
            }
            if (CipherText.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(CipherText);
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EncryptedData other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Iv.Length != 0)
            {
                Iv = other.Iv;
            }
            if (other.CipherText.Length != 0)
            {
                CipherText = other.CipherText;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;

                    case 10:
                        {
                            Iv = input.ReadBytes();
                            break;
                        }
                    case 18:
                        {
                            CipherText = input.ReadBytes();
                            break;
                        }
                }
            }
        }
    }

    #endregion Messages
}

#endregion Designer generated code